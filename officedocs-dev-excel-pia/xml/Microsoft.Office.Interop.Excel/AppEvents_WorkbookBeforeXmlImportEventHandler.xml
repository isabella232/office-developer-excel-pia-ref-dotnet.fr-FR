<Type Name="AppEvents_WorkbookBeforeXmlImportEventHandler" FullName="Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlImportEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d39346b5b3f85253e1e823e924f059fef1d15d56c79af7cf49c8b953cfaf4b7c" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54505069" /></Metadata><TypeSignature Language="C#" Value="public delegate void AppEvents_WorkbookBeforeXmlImportEventHandler(Workbook Wb, XmlMap Map, string Url, bool IsRefresh, out bool Cancel);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AppEvents_WorkbookBeforeXmlImportEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.AppEvents_WorkbookBeforeXmlImportEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AppEvents_WorkbookBeforeXmlImportEventHandler(Wb As Workbook, Map As XmlMap, Url As String, IsRefresh As Boolean, ByRef Cancel As Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AppEvents_WorkbookBeforeXmlImportEventHandler(Workbook ^ Wb, XmlMap ^ Map, System::String ^ Url, bool IsRefresh, [Runtime::InteropServices::Out] bool % Cancel);" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(16)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="Wb" Type="Microsoft.Office.Interop.Excel.Workbook" />
    <Parameter Name="Map" Type="Microsoft.Office.Interop.Excel.XmlMap" />
    <Parameter Name="Url" Type="System.String" />
    <Parameter Name="IsRefresh" Type="System.Boolean" />
    <Parameter Name="Cancel" Type="System.Boolean&amp;" RefType="out" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="Wb">Obligatoire <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> . Classeur cible.</param>
    <param name="Map">Obligatoire <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> . Mappage XML qui sera utilisé pour importer des données.</param>
    <param name="Url">Argument de type <b>String</b> obligatoire. Emplacement du fichier XML à importer.</param>
    <param name="IsRefresh"><b>Boolean</b> obligatoire. <b>True</b> si l’événement a été déclenché par l’actualisation d’une connexion existante aux données XML ; <b>False</b> si un nouveau mappage est créé.</param>
    <param name="Cancel"><b>Boolean</b> obligatoire. Définir à <b>True</b> pour annuler l'opération d'importation ou d'actualisation.</param>
    <summary>Type <b>Delegate</b> utilisé pour ajouter un handler d’événement pour <see cref="E:Microsoft.Office.Interop.Excel.AppEvents_Event.WorkbookBeforeXmlImport" /> l’événement. <b>L’événement WorkbookBeforeXmlImport</b> se produit avant l’actualisation d’une connexion de données XML existante ou l’importation de nouvelles données XML dans n’importe quel Microsoft Excel ouvert.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>