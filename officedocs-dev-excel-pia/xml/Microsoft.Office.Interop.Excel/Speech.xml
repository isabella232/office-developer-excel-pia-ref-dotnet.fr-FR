<Type Name="Speech" FullName="Microsoft.Office.Interop.Excel.Speech">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0f654b6c10e3110a0b6267111f978db256db44bf2d1d9243f90625e0e06faff0" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54516969" /></Metadata><TypeSignature Language="C#" Value="public interface Speech" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Speech" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Speech" />
  <TypeSignature Language="VB.NET" Value="Public Interface Speech" />
  <TypeSignature Language="C++ CLI" Value="public interface class Speech" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024466-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Cet objet contient des méthodes et des propriétés qui se rapportent aux fonctions vocales.</summary>
    <remarks><para>Utilisez la <see cref="P:Microsoft.Office.Interop.Excel._Application.Speech" /> propriété de <see cref="T:Microsoft.Office.Interop.Excel.Application" /> l’objet pour renvoyer un objet <b>Speech.</b></para>
      <para>Une fois <b>qu’un</b> objet Speech est renvoyé, vous pouvez utiliser la méthode de l’objet Speech pour lire <see cref="M:Microsoft.Office.Interop.Excel.Speech.Speak(System.String,System.Object,System.Object,System.Object)" /> le contenu d’une chaîne. <b></b></para>
      <para>
        <b>Remarque</b>: il existe une fonctionnalité vocale dans l’arborescence d’installation qui se rapporte à la Dictée et au contrôle de commande qui n’a pas &amp; besoin d’être installée.</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSpeakDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSpeakDirection Direction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Speech.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As XlSpeakDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSpeakDirection Direction { Microsoft::Office::Interop::Excel::XlSpeakDirection get(); void set(Microsoft::Office::Interop::Excel::XlSpeakDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSpeakDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie
 ou définit l'ordre dans lequel les cellules vont être présentées oralement.</summary>
        <value>To be added.</value>
        <remarks><para>La valeur de la <b>propriété Direction</b> est une <see cref="T:Microsoft.Office.Interop.Excel.XlSpeakDirection" /> constante.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string Text, object SpeakAsync, object SpeakXML, object Purge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak([in]string Text, [in]object SpeakAsync, [in]object SpeakXML, [in]object Purge) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Speech.Speak(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (Text As String, Optional SpeakAsync As Object, Optional SpeakXML As Object, Optional Purge As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2017)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="SpeakAsync" Type="System.Object" />
        <Parameter Name="SpeakXML" Type="System.Object" />
        <Parameter Name="Purge" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">Argument de type <b>String</b> obligatoire. Texte à présenter oralement.</param>
        <param name="SpeakAsync">Objet <b>facultatif</b>. <b>La</b> valeur True entraîne la parole asynchrone (la méthode n’attend pas la <paramref name="Text" /> <paramref name="Text" /> parole). <b>False</b> entraîne la voix synchrone (la méthode attend la parole <paramref name="Text" /> avant de <paramref name="Text" /> continuer). La valeur par défaut est <b>False</b>.</param>
        <param name="SpeakXML">Facultatif <b>Boolean</b>. <b>True</b> entraîne <paramref name="Text" /> l’interprétation du XML. <b>False</b> entraîne l’interprétation du code XML, de sorte que toutes les balises <paramref name="Text" /> XML sont lues et non interprétées. La valeur par défaut est <b>False</b>.</param>
        <param name="Purge">Objet <b>facultatif</b>. <b>La</b> valeur True entraîne la fin de la parole actuelle et la purge de tout texte mis en mémoire tampon avant <paramref name="Text" /> la parole. <b>La</b> valeur False ne met pas fin à la parole actuelle et ne purge pas le texte mis en mémoire tampon avant <paramref name="Text" /> la parole. La valeur par défaut est <b>False</b>.</param>
        <summary>Microsoft Excel lire la chaîne de texte spécifiée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakCellOnEnter">
      <MemberSignature Language="C#" Value="public bool SpeakCellOnEnter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SpeakCellOnEnter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Speech.SpeakCellOnEnter" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeakCellOnEnter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SpeakCellOnEnter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Microsoft Excel prend en charge un mode permettant à la cellule active d’être lue oralement lorsque la touche Entrée est enfoncée ou à la suite de modifications apportées à la cellule active. Définir la propriété <b>SpeakCellOnEnter</b> sur <b>True</b> active ce mode. La valeur <b>False</b> le désactive.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>